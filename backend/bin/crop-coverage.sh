#!/bin/bash

# A script to extract the Code Coverage summary table from a PHPUnit coverage report.
# This version uses awk for more robust parsing.

# --- Configuration ---
# The source HTML file generated by PHPUnit.
COVERAGE_FILE="${1:-var/coverage/index.html}"

# The destination file for the cropped HTML snippet.
OUTPUT_FILE="${2:-coverage-summary.html}"

# --- Script Logic ---

# 1. Check if the source file exists
if [ ! -f "$COVERAGE_FILE" ]; then
    echo "Error: Coverage report file not found at '${COVERAGE_FILE}'"
    echo "Please make sure you have run PHPUnit with --coverage-html."
    exit 1
fi

# 2. Extract the first complete table block using awk.
# How it works:
#   - It looks for the first line that starts a table (<table class="table ...">).
#   - Once found, it sets a flag 'in_table=1'.
#   - It prints every line as long as the flag is set.
#   - When it finds the closing </table> tag, it prints it, unsets the flag, and exits immediately.
#   - This ensures we only get the very first table, which is the summary.
awk '
  /^\s*<table class="table table-bordered"/ { in_table=1 }
  in_table { print }
  /^\s*<\/table>/ { if (in_table) { exit } }
' "$COVERAGE_FILE" > "$OUTPUT_FILE"

# 3. Check if the output file was created and is not empty
if [ -s "$OUTPUT_FILE" ]; then
    echo "Successfully extracted code coverage summary to '${OUTPUT_FILE}'"
    exit 0
else
    echo "Error: Could not extract coverage data."
    echo "The HTML structure of the report may have changed significantly."
    echo "Please inspect '${COVERAGE_FILE}' to verify the main summary table."
    # Clean up the empty file
    rm -f "$OUTPUT_FILE"
    exit 1
fi
